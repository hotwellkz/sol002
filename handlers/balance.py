from aiogram import Router, types
from aiogram.filters import Command
from loguru import logger
from services.wallet import WalletService
from services.solana_service import SolanaService

router = Router()
wallet_service = WalletService()
solana_service = SolanaService()

@router.message(Command("balance"))
async def cmd_balance(message: types.Message, state=None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /balance: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç SOL –∏ –≤—Å–µ —Ç–æ–∫–µ–Ω—ã —Å –Ω–µ–Ω—É–ª–µ–≤—ã–º –±–∞–ª–∞–Ω—Å–æ–º (–∫–∞–∫ /start)"""
    user_id = message.from_user.id
    logger.info(f"User {user_id} requested balance (show all tokens with nonzero balance)")
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ—à–µ–ª–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        wallet = await wallet_service.get_wallet(user_id)
        if not wallet:
            await message.answer("–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∫–æ—à–µ–ª—å–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è.")
            return

        public_key = wallet['public_key']
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å SOL
        sol_balance = await solana_service.get_sol_balance(public_key)
        from services.price_service import PriceService
        sol_price_usd = 0.0
        try:
            sol_price_usd = await PriceService().get_sol_price()
        except Exception:
            pass
        usd_value = float(sol_balance) * sol_price_usd if sol_price_usd else 0.0

        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã —Å –Ω–µ–Ω—É–ª–µ–≤—ã–º –±–∞–ª–∞–Ω—Å–æ–º
        tokens = await solana_service.get_wallet_tokens(public_key)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        text = (
            f"üëá –í–∞—à –∫–æ—à–µ–ª–µ–∫:\n"
            f"`{public_key}`\n\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å—ã:\n"
        )
        text += f"- SOL: {sol_balance} (~${usd_value:.2f})\n"

        # –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º mint-–∞–¥—Ä–µ—Å–∞ —Å —Ç–∏–∫–µ—Ä–∞–º–∏ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
        from config import SOLANA_TOKEN_ADDRESSES
        mint_to_ticker = {v: k for k, v in SOLANA_TOKEN_ADDRESSES.items()}
        for mint, raw_amount in tokens.items():
            balance = await solana_service.get_token_balance(public_key, mint)
            ticker = mint_to_ticker.get(mint, mint[:6])
            text += f"- {ticker}: {balance}\n"

        text += "\n–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –Ω–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã ‚Äî —Å–Ω–∞—á–∞–ª–∞ –∫—É–ø–∏—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ –±–æ—Ç–∞."

        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –µ—Å—Ç—å
        try:
            from keyboards.inline import get_main_keyboard
            keyboard = get_main_keyboard()
        except Exception:
            keyboard = None

        await message.answer(text, reply_markup=keyboard, parse_mode="Markdown")
        logger.info(f"Balance info (all tokens) sent to user {user_id}")
    except Exception as e:
        logger.error(f"Error in balance command for user {user_id}: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")